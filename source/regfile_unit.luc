module regfile_unit (
    input clk,  // clock
    input rst,  // reset
    input ra[5],
    input rb[5], 
    input rc[5],
    input wasel,
    input ra2sel,
    input werf,
    input wdsel_out[32],
    input slowclk,
    output z,
    output reg_data_1[32],
    output reg_data_2[32],
    output mwd[32],
    output r0_data[32],
    output r1_data[32],
    output r2_data[32],
    output r3_data[32],
    output r4_data[32],
    output r5_data[32],
    output r6_data[32],
    output r18_data[32],
    input r8_data,
    input r9_data,
    input r10_data,
    input r11_data,
    input r8_data_rise,
    input r9_data_rise,
    input r10_data_rise,
    input r11_data_rise,
    input r12_data_rise
    
  ) {
  
  regfile_memory regfile(.clk(clk), .rst(rst));
  sig ra2sel_out[5];
  sig wasel_out[5];
  
  always {

    //*****REGFILE*******//
    // do not write anything to the regfile unless PC advances 
    regfile.write_enable = 0;
    if (slowclk) {
      regfile.write_enable = werf;
    }
    
    // TASK 6
    // RA2SEL mux
    case(ra2sel){
      b0:
        ra2sel_out = rb;
      b1:
        ra2sel_out = rc;
      default:
        ra2sel_out = rb;
    }

    // WASEL mux 
    case(wasel){
      b0:
        wasel_out = rc;
      b1:
        wasel_out = b11110;
      default:
        wasel_out = rc;
    }
    
    // connections to regfile memory
    regfile.read_address_2 = ra2sel_out;
    regfile.read_address_1 = ra;
    regfile.write_address = wasel_out;
    regfile.write_data = wdsel_out;
    
    // TASK 8
    // compute z 
    z = ~|regfile.reg_data_1;

    // output connections
    reg_data_1 = regfile.reg_data_1; 
    reg_data_2 = regfile.reg_data_2;
    r0_data = regfile.r0_data;
    r1_data = regfile.r1_data;
    r2_data = regfile.r2_data;
    r3_data = regfile.r3_data;
    r4_data = regfile.r4_data;
    r5_data = regfile.r5_data;
    r6_data = regfile.r6_data;
    r18_data = regfile.r18_data;
    regfile.r8_data = r8_data;
    regfile.r9_data = r9_data;
    regfile.r10_data = r10_data;
    regfile.r11_data = r11_data;
    regfile.r8_data_rise = r8_data_rise;
    regfile.r9_data_rise = r9_data_rise;
    regfile.r10_data_rise = r10_data_rise;
    regfile.r11_data_rise = r11_data_rise;
    regfile.r12_data_rise = r12_data_rise;
    
    // TASK 9
    // connect output of RD2 port of regfile_memory as mwd
    mwd = regfile.reg_data_2;

  }
}
